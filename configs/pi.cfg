import os
import logging
import random
import string

log = logging.getLogger(__name__)

def _random_password(size):
    log.info("SECRET_KEY not set in config. Generating a random key.")
    passwd = [random.choice(string.ascii_lowercase + \
                            string.ascii_uppercase + string.digits) for _x in range(size)]
    # return shuffled password
    random.shuffle(passwd)
    return "".join(passwd)


DEBUG = os.environ.get('DEBUG','False') == 'True'

if not DEBUG and os.environ.get('SECRET_KEY'):
    log.info("SECRET_KEY not set in config. Generating a random key.")

SECRET_KEY = os.environ.get('SECRET_KEY') or _random_password(24)

if not DEBUG and os.environ.get('PI_PEPPER'):
    log.info("PI_PEPPER not set in config. Generating a random key.")

PI_PEPPER = os.environ.get('PI_PEPPER') or _random_password(24)

SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URI','sqlite:////pi/mnt/data.sqlite')
SUPERUSER_REALM = ['super', 'administrators']

# Defaults are provided for verbosity - these env vars have defaults included in the Dockerfile
PI_LOGCONFIG = os.environ.get('PI_LOGCONFIG','/pi/logging.yml')
PI_ENCFILE = os.environ.get('PI_ENCFILE','/pi/mnt/enckey')
PI_AUDIT_KEY_PRIVATE = os.environ.get('PI_AUDIT_KEY_PRIVATE','/pi/mnt/audit-private.pem')
PI_AUDIT_KEY_PUBLIC = os.environ.get('PI_AUDIT_KEY_PUBLIC','/pi/mnt/audit-public.pem')
